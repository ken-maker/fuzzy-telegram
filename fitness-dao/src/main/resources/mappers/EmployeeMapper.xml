<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.EmployeeDao">
    <insert id="addEmployee">
        insert into employee(name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge)
        values(#{name},#{age},#{gender},#{salary},#{idCard},#{address},#{phoneNumber},#{employmentTerm},now(),#{employeeTypeId},#{picture},#{teachAge})
    </insert>

    <delete id="deleteEmployee">
        delete from employee where id=#{id}
    </delete>

    <select id="getEmployeeList" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee group by id
    </select>

    <select id="getEmployeeListByGender" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where gender=#{gender} group by id
    </select>

    <select id="getEmployeeListByAge" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where age=#{age} group by id
    </select>

    <select id="getEmployeeListBySalary" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where salary=#{salary} group by id
    </select>

    <select id="getEmployeeListByEmployeeTypeId" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
from employee where employeeTypeId=3
    </select>

    <select id="getEmployeeById" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where id=#{id}
    </select>

    <select id="getEmployeeByPhoneNumber" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where phoneNumber=#{phoneNumber}
    </select>

    <select id="getEmployeeByIdentityCard" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where idCard=#{idCard}
    </select>

    <update id="updateEmployee">
        update employee set name=#{name},age=#{age}, gender=#{gender},
        salary=#{salary}, idCard=#{idCard}, address=#{address},
        phoneNumber=#{phoneNumber}, employmentTerm=#{employmentTerm},
        startEmploy=#{startEmploy},employeeTypeId=#{employeeTypeId},
        ,picture=#{picture},teachAge=#{teachAge}
        where id=#{id}
    </update>

<!--    ===========================私教=================================-->

    <select id="getTrainerList" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where employeeTypeId=3 group by id
    </select>

    <select id="getTrainerById" resultType="com.bean.Employee">
        select id,name, age, gender, salary, idCard, address, phoneNumber, employmentTerm, startEmploy,employeeTypeId,picture,teachAge
        from employee where id=#{id}
    </select>
</mapper>

